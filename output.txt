INTTK int
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR i
ASSIGN =
INTCON 1
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
<InitVal>
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR j
ASSIGN =
INTCON 1
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
<InitVal>
<VarDef>
SEMICN ;
<VarDecl>
INTTK int
IDENFR d
LBRACK [
INTCON 2
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<ConstExp>
RBRACK ]
ASSIGN =
LBRACE {
INTCON 99
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
<InitVal>
COMMA ,
INTCON 22
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
<InitVal>
RBRACE }
<InitVal>
<VarDef>
SEMICN ;
<VarDecl>
IFTK if
LPARENT (
IDENFR j
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
<EqExp>
EQL ==
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
<EqExp>
<LAndExp>
<LOrExp>
<Cond>
RPARENT )
LBRACE {
IDENFR i
<LVal>
ASSIGN =
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
PLUS +
INTCON 1
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
SEMICN ;
<Stmt>
RBRACE }
<Block>
<Stmt>
<Stmt>
PRINTFTK printf
LPARENT (
STRCON "%d\n"
COMMA ,
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
RPARENT )
SEMICN ;
<Stmt>
IFTK if
LPARENT (
IDENFR j
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
<EqExp>
EQL ==
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
<EqExp>
<LAndExp>
<LOrExp>
OR ||
IDENFR j
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
GEQ >=
INTCON 1
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
<EqExp>
<LAndExp>
<LOrExp>
OR ||
IDENFR j
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
LSS <
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<RelExp>
<EqExp>
<LAndExp>
<LOrExp>
<Cond>
RPARENT )
LBRACE {
IDENFR i
<LVal>
ASSIGN =
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<MulExp>
MULT *
IDENFR d
LBRACK [
IDENFR j
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
RBRACK ]
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
PLUS +
INTCON 1
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
SEMICN ;
<Stmt>
RBRACE }
<Block>
<Stmt>
<Stmt>
PRINTFTK printf
LPARENT (
STRCON "%d"
COMMA ,
IDENFR i
<LVal>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
RPARENT )
SEMICN ;
<Stmt>
RETURNTK return
INTCON 0
<Number>
<PrimaryExp>
<UnaryExp>
<AddExp>
<Exp>
SEMICN ;
<Stmt>
RBRACE }
<Block>
<MainFuncDef>
<CompUnit>
